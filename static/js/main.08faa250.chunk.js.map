{"version":3,"sources":["components/Buttons/Buttons.module.css","components/Buttons/Buttons.js","components/Statistics/Statistic.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js","components/Section/Section.module.css","components/Statistics/Statistic.module.css"],"names":["module","exports","Buttons","options","onLeaveFeedback","className","style","wrapper","map","option","idx","key","type","btn","onClick","Statistic","good","neutral","bad","total","positivePercentage","list","Section","title","children","section","Notification","App","state","props","initialValueGood","initialValueNeutral","initialValueBad","doStuff","setState","countTotalFeedback","countPositiveFeedbackPercentage","percents","Math","round","Number","isNaN","this","Component","defaultProps","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6EACAA,EAAOC,QAAU,CAAC,IAAM,qBAAqB,QAAU,2B,2KCgBxCC,EAdC,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACd,yBAAKC,UAAWC,IAAMC,SACnBJ,EAAQK,KAAI,SAACC,EAAQC,GAAT,OACX,4BACEC,IAAKD,EACLE,KAAK,SACLP,UAAWC,IAAMO,IACjBC,QAAS,kBAAMV,EAAgBK,KAE9BA,Q,gBCCMM,EAXG,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACN,IAAVD,GACE,wBAAId,UAAWC,IAAMe,MACnB,qCAAWL,GACX,wCAAcC,EAAd,KACA,oCAAUC,EAAV,KACA,sCAAYC,GACZ,kDAAwBC,EAAxB,O,gBCCSE,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,6BAASnB,UAAWC,IAAMmB,SACxB,uBAAGpB,UAAWC,IAAMiB,OAAQA,GAC3BC,ICHUE,EAFM,SAAC,GAAD,OAAyB,IAAzB,EAAGP,OAA2B,iDCS7CQ,E,4MAaJC,MAAQ,CACNZ,KAAM,EAAKa,MAAMC,iBACjBb,QAAS,EAAKY,MAAME,oBACpBb,IAAK,EAAKW,MAAMG,iB,EAElB7B,QAAU,CAAC,OAAQ,UAAW,O,EAC9B8B,QAAU,SAAAxB,GACR,EAAKyB,SAAL,eAAiBzB,EAAS,EAAKmB,MAAMnB,GAAU,K,EAEjD0B,mBAAqB,WAEnB,OADY,EAAKP,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,K,EAGhEkB,gCAAkC,WAChC,IAAIC,EAAWC,KAAKC,MACjB,EAAKX,MAAMZ,MACT,EAAKY,MAAMZ,KAAO,EAAKY,MAAMX,QAAU,EAAKW,MAAMV,KACnD,KAEJ,OAAOsB,OAAOC,MAAMJ,GAAY,EAAIA,G,uDAE5B,IAAD,EACwBK,KAAKd,MAA5BZ,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,oCACE,kBAAC,EAAD,CAASK,MAAO,0BACd,kBAAC,EAAD,CAASpB,QAASuC,KAAKvC,QAASC,gBAAiBsC,KAAKT,WAExD,kBAAC,EAAD,CAASV,MAAO,cACd,kBAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOuB,KAAKP,qBACZf,mBAAoBsB,KAAKN,oCAE3B,kBAAC,EAAD,CAAcjB,MAAOuB,KAAKP,6B,GAlDlBQ,aAAZhB,EACGiB,aAAe,CACpBd,iBAAkB,EAClBC,oBAAqB,EACrBC,gBAAiB,GAoDNL,QC7DfkB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1BjD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,KAAO,2B","file":"static/js/main.08faa250.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Buttons_btn__7-NQ-\",\"wrapper\":\"Buttons_wrapper__3nFcw\"};","import React from 'react';\nimport style from './Buttons.module.css';\n\nconst Buttons = ({ options, onLeaveFeedback }) => (\n  <div className={style.wrapper}>\n    {options.map((option, idx) => (\n      <button\n        key={idx}\n        type=\"button\"\n        className={style.btn}\n        onClick={() => onLeaveFeedback(option)}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\nexport default Buttons;\n","import React from 'react';\nimport style from './Statistic.module.css';\nconst Statistic = ({ good, neutral, bad, total, positivePercentage }) =>\n  total !== 0 && (\n    <ul className={style.list}>\n      <li>good: {good}</li>\n      <li>neutral: {neutral} </li>\n      <li>bad: {bad} </li>\n      <li>total: {total}</li>\n      <li>positive feedback: {positivePercentage}%</li>\n    </ul>\n  );\n\nexport default Statistic;\n","import React from 'react';\nimport style from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={style.section}>\n    <p className={style.title}>{title}</p>\n    {children}\n  </section>\n);\n\nexport default Section;\n","import React from 'react';\nconst Notification = ({ total }) => total === 0 && <p>No feedback given</p>;\n\nexport default Notification;\n","import React, { Component } from 'react';\nimport propTypes from 'prop-types';\n\nimport Buttons from './components/Buttons';\nimport Statistic from './components/Statistics';\nimport Section from './components/Section/';\nimport Notification from './components/Notification';\n\n\n\nclass App extends Component {\n  static defaultProps = {\n    initialValueGood: 0,\n    initialValueNeutral: 0,\n    initialValueBad: 0,\n  };\n  static propTypes = {\n    state: propTypes.objectOf(propTypes.number.isRequired),\n\n    doStuff: propTypes.func,\n    countTotalFeedback: propTypes.func,\n    countPositiveFeedbackPercentage: propTypes.func,\n  };\n  state = {\n    good: this.props.initialValueGood,\n    neutral: this.props.initialValueNeutral,\n    bad: this.props.initialValueBad,\n  };\n  options = ['good', 'neutral', 'bad'];\n  doStuff = option => {\n    this.setState({ [option]: this.state[option] + 1 });\n  };\n  countTotalFeedback = () => {\n    let total = this.state.good + this.state.neutral + this.state.bad;\n    return total;\n  };\n  countPositiveFeedbackPercentage = () => {\n    let percents = Math.round(\n      (this.state.good /\n        (this.state.good + this.state.neutral + this.state.bad)) *\n        100,\n    );\n    return Number.isNaN(percents) ? 0 : percents;\n  };\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title={'Please leave feedback!'}>\n          <Buttons options={this.options} onLeaveFeedback={this.doStuff} />\n        </Section>\n        <Section title={'Statistic:'}>\n          <Statistic\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n          />\n          <Notification total={this.countTotalFeedback()} />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__TF1bp\",\"title\":\"Section_title__2OdeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistic_list__btoAp\"};"],"sourceRoot":""}